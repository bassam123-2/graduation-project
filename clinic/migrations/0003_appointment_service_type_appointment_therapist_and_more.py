# Generated by Django 5.2.4 on 2025-08-25 18:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clinic', '0002_alter_appointment_options_alter_customuser_options_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='appointment',
            name='service_type',
            field=models.CharField(choices=[('manual-therapy', 'Manual Therapy'), ('physical-therapy', 'Physical Therapy'), ('rehabilitation', 'Rehabilitation Body Engineering'), ('consultation', 'General Consultation'), ('follow-up', 'Follow-up Session'), ('assessment', 'Initial Assessment')], default='consultation', max_length=50),
        ),
        migrations.AddField(
            model_name='appointment',
            name='therapist',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'therapist'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='blood_type',
            field=models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='city',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='condition_description',
            field=models.TextField(blank=True, help_text='Description of current condition', null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='condition_type',
            field=models.CharField(blank=True, help_text='Type of condition', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='emergency_contact',
            field=models.CharField(blank=True, help_text='Emergency contact name and phone', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='gender',
            field=models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer-not-to-say', 'Prefer not to say')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='medical_history',
            field=models.TextField(blank=True, help_text='Medical history, allergies, current medications', null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='nationality',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='referral_source',
            field=models.CharField(blank=True, help_text='How did you hear about us', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='referring_doctor',
            field=models.CharField(blank=True, help_text='Referring doctor name', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='treatment_reason',
            field=models.TextField(blank=True, help_text='Primary reason for seeking treatment', null=True),
        ),
        migrations.AddField(
            model_name='treatmentplan',
            name='completed_sessions',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='treatmentplan',
            name='progress_percentage',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='treatmentplan',
            name='total_sessions',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('condition', models.CharField(help_text='Condition treated', max_length=200)),
                ('treatment_type', models.CharField(choices=[('manual-therapy', 'Manual Therapy'), ('physical-therapy', 'Physical Therapy'), ('body-engineering', 'Rehabilitation Body Engineering'), ('multiple', 'Multiple Treatments'), ('other', 'Other')], max_length=50)),
                ('treatment_duration', models.CharField(blank=True, choices=[('1-2-weeks', '1-2 weeks'), ('3-4-weeks', '3-4 weeks'), ('1-2-months', '1-2 months'), ('3-6-months', '3-6 months'), ('6-months-plus', '6+ months')], max_length=50)),
                ('specialist', models.CharField(blank=True, help_text='Name of specialist (optional)', max_length=100)),
                ('before_condition', models.TextField(help_text='Describe your condition before treatment')),
                ('treatment_experience', models.TextField(help_text='Describe your treatment experience')),
                ('results', models.TextField(help_text='Describe the results you achieved')),
                ('testimonial_text', models.TextField(help_text='Your complete testimonial story')),
                ('additional_comments', models.TextField(blank=True, help_text='Any additional comments')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='Overall rating (1-5 stars)')),
                ('recommend', models.CharField(choices=[('definitely-yes', 'Definitely Yes'), ('probably-yes', 'Probably Yes'), ('maybe', 'Maybe'), ('probably-not', 'Probably Not'), ('definitely-not', 'Definitely Not')], help_text='Would you recommend us?', max_length=50)),
                ('consent', models.BooleanField(default=False, help_text='Consent to use testimonial publicly')),
                ('anonymous', models.BooleanField(default=False, help_text='Prefer to remain anonymous')),
                ('contact_permission', models.BooleanField(default=False, help_text='Permission to contact for follow-up')),
                ('media_file', models.FileField(blank=True, help_text='Optional photo or video', null=True, upload_to='testimonials/media/')),
                ('is_approved', models.BooleanField(default=False, help_text='Approved for public display')),
                ('is_featured', models.BooleanField(default=False, help_text='Featured testimonial')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_testimonials', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_approved', 'created_at'], name='clinic_test_is_appr_160beb_idx'), models.Index(fields=['is_featured'], name='clinic_test_is_feat_f37c28_idx'), models.Index(fields=['treatment_type'], name='clinic_test_treatme_2691f4_idx'), models.Index(fields=['rating'], name='clinic_test_rating_f54723_idx')],
            },
        ),
    ]
